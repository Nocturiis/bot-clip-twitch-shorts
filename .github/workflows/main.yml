# .github/workflows/main.yml
name: Publish Daily YouTube Short

on:
  workflow_dispatch: # Permet de déclencher le workflow manuellement
  schedule:
    # Exécute le workflow tous les jours à 10h, 13h, 16h UTC
    # (ce qui correspond à 12h, 15h, 18h en heure d'été de Bruxelles/Paris)
    # Ajustez selon votre fuseau horaire.
    - cron: '0 10,13,16 * * *'

jobs:
  publish-short:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # Ou une version compatible que vous préférez

    - name: Install system dependencies (ffmpeg, ImageMagick)
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg imagemagick

    - name: Configure ImageMagick policy # <-- NOUVELLE ÉTAPE ICI
      run: |
        # Chemin typique du fichier policy.xml sur Ubuntu
        POLICY_FILE="/etc/ImageMagick-6/policy.xml"
        
        # Sauvegarder l'original (bonne pratique)
        sudo cp $POLICY_FILE ${POLICY_FILE}.bak
        
        # Modifier la politique pour autoriser les opérations sur les fichiers et les formats
        # On remplace les restrictions "disk", "file", "url", "https" et "path" par "none"
        # et on s'assure que les formats "PNG" et "TMP" ne sont pas restreints.
        sudo sed -i 's/<policy domain="disk" rights="none" pattern="*"\/>/<policy domain="disk" rights="read|write" pattern="*"\/>/g' $POLICY_FILE
        sudo sed -i 's/<policy domain="file" rights="none" pattern="*"\/>/<policy domain="file" rights="read|write" pattern="*"\/>/g' $POLICY_FILE
        sudo sed -i 's/<policy domain="url" rights="none" pattern="*"\/>/<policy domain="url" rights="read|write" pattern="*"\/>/g' $POLICY_FILE
        sudo sed -i 's/<policy domain="https" rights="none" pattern="*"\/>/<policy domain="https" rights="read|write" pattern="*"\/>/g' $POLICY_FILE
        sudo sed -i 's/<policy domain="path" rights="none" pattern="*"\/>/<policy domain="path" rights="read|write" pattern="*"\/>/g' $POLICY_FILE
        # Assurez-vous que les politiques pour les formats PNG et TMP ne sont pas restrictives
        # Si elles existent et sont restrictives, vous devrez peut-être les commenter ou les modifier.
        # Par exemple, pour commenter une ligne: sudo sed -i '/<policy domain="coder" rights="none" pattern="PNG" \/>/s/^/#/' $POLICY_FILE
        # Une approche plus simple est de s'assurer qu'il n'y a pas de restrictions "none" pour les "coder" en général.
        # La ligne suivante supprime toute ligne qui restreint un "coder" à "none"
        sudo sed -i '/<policy domain="coder" rights="none" pattern="[^"]*"\/>/d' $POLICY_FILE
        echo "ImageMagick policy updated."

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # N'oubliez pas que votre requirements.txt doit contenir:
        # moviepy==1.0.3
        # scikit-image
        # Pillow==9.5.0  <-- Très important pour le problème ANTIALIAS
        
    - name: Create client_secret.json from secret
      run: |
        echo '${{ secrets.GOOGLE_CLIENT_SECRET_JSON }}' > client_secret.json
      env:
        GOOGLE_CLIENT_SECRET_JSON: ${{ secrets.GOOGLE_CLIENT_SECRET_JSON }}

    - name: Create token.json from secret (for YouTube API)
      run: |
        echo '${{ secrets.YOUTUBE_API_TOKEN_JSON }}' > token.json
      env:
        YOUTUBE_API_TOKEN_JSON: ${{ secrets.YOUTUBE_API_TOKEN_JSON }}

    - name: Run main script
      run: python main.py
      env:
        TWITCH_CLIENT_ID: ${{ secrets.TWITCH_CLIENT_ID }}
        TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}
        # Si vous utilisez GOOGLE_APPLICATION_CREDENTIALS, décommentez et ajustez:
        # GOOGLE_APPLICATION_CREDENTIALS: client_secret.json