# .github/workflows/main.yml
name: Publish Daily YouTube Short

on:
  workflow_dispatch: # Permet de déclencher le workflow manuellement
  schedule:
    # Exécute le workflow tous les jours à 10h, 13h, 16h UTC
    # (ce qui correspond à 12h, 15h, 18h en heure d'été de Bruxelles/Paris)
    # Ajustez selon votre fuseau horaire.
    - cron: '0 10,13,16 * * *'

jobs:
  publish-short:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # Ou une version compatible que vous préférez

    - name: Install system dependencies (ffmpeg, ImageMagick)
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg imagemagick

    # ... (votre configuration existante) ...

    - name: Configure ImageMagick policy # <-- MISE À JOUR DE CETTE ÉTAPE
      run: |
        # Chemin typique du fichier policy.xml sur Ubuntu
        POLICY_FILE="/etc/ImageMagick-6/policy.xml"
        
        # Sauvegarder l'original (bonne pratique)
        sudo cp $POLICY_FILE ${POLICY_FILE}.bak
        
        # Modifier la politique pour autoriser les opérations sur les fichiers et les formats
        # Remplacer toutes les occurrences de rights="none" par rights="read|write"
        # pour les domaines "disk", "file", "url", "https", "path".
        # Utilisation de regex plus génériques pour s'assurer que toutes les lignes sont capturées.
        sudo sed -i 's/<policy domain="\([^"]*\)" rights="none" pattern="\([^"]*\)"\/>/<policy domain="\1" rights="read|write" pattern="\2"\/>/g' $POLICY_FILE
        
        # Spécifiquement, s'assurer que les restrictions sur les "coder" (formats d'image/texte) sont levées.
        # MoviePy utilise souvent PNG et des fichiers temporaires.
        # Cette commande supprime toute ligne de politique qui restreint un "coder" à "none".
        sudo sed -i '/<policy domain="coder" rights="none" pattern="[^"]*"\/>/d' $POLICY_FILE
        
        # Si le problème persiste avec le texte, vous pourriez avoir besoin de cibler spécifiquement les formats TXT, PS, EPS, PDF
        # Exemple pour TXT:
        # sudo sed -i 's/<policy domain="coder" rights="none" pattern="TXT"\/>/<policy domain="coder" rights="read|write" pattern="TXT"\/>/g' $POLICY_FILE
        
        echo "ImageMagick policy updated."

# ... (le reste de vos étapes) ...

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # N'oubliez pas que votre requirements.txt doit contenir:
        # moviepy==1.0.3
        # scikit-image
        # Pillow==9.5.0  <-- Très important pour le problème ANTIALIAS
        
    - name: Create client_secret.json from secret
      run: |
        echo '${{ secrets.GOOGLE_CLIENT_SECRET_JSON }}' > client_secret.json
      env:
        GOOGLE_CLIENT_SECRET_JSON: ${{ secrets.GOOGLE_CLIENT_SECRET_JSON }}

    - name: Create token.json from secret (for YouTube API)
      run: |
        echo '${{ secrets.YOUTUBE_API_TOKEN_JSON }}' > token.json
      env:
        YOUTUBE_API_TOKEN_JSON: ${{ secrets.YOUTUBE_API_TOKEN_JSON }}

    - name: Run main script
      run: python main.py
      env:
        TWITCH_CLIENT_ID: ${{ secrets.TWITCH_CLIENT_ID }}
        TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}
        # Si vous utilisez GOOGLE_APPLICATION_CREDENTIALS, décommentez et ajustez:
        # GOOGLE_APPLICATION_CREDENTIALS: client_secret.json